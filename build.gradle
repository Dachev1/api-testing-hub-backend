plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.apitestinghub'
version = '1.0.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Cache
	implementation 'com.github.ben-manes.caffeine:caffeine'

	// Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// JSON Processing
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// Reactor for reactive programming
	implementation 'io.projectreactor:reactor-core'
	implementation 'io.projectreactor.netty:reactor-netty-http'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Gradle wrapper configuration
wrapper {
	gradleVersion = '8.10'
	distributionType = Wrapper.DistributionType.BIN
}

// Build optimization
tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
	options.compilerArgs += ['-parameters']
}

// JAR configuration
jar {
	enabled = false
}

bootJar {
	archiveFileName = "${project.name}-${project.version}.jar"
}